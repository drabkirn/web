name: Web_CI

on:
  push:
    branches: [ master, gh_actions ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out latest push
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.45.0
        with:
          ruby-version: 2.7.1
      
      - name: Setup MYSQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql root password: ${{ secrets.MYSQL_ROOT_PASSWORD }}

      - name: Cache Ruby Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: "Cache Yarn"
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Yarn
        uses: Borales/actions-yarn@v2.3.0
        with:
          cmd: install
      
      - name: Install Dependencies
        run: |
          sudo apt install -yqq libmysqlclient-dev
          gem install bundler
      
      - name: Install Gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup Code Climate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Prepare Database and run tests
        env:
          db_hostname: ${{ secrets.MYSQL_HOSTNAME }}
          db_username: ${{ secrets.MYSQL_USERNAME }}
          db_password: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          db_name: ${{ secrets.MYSQL_DB_NAME }}
          RAILS_ENV: "test"
          app_hostname: "localhost"
          app_port: "3000"
          devise_secret_key: ${{ secrets.DEVISE_SECRET_KEY }}
          devise_pepper_hash: ${{ secrets.DEVISE_PEPPER_HASH }}
          ci_true: true
          capybara_screenshots_path: tmp/capybara_screenshots
          sendgrid_auth_token: ${{ secrets.SENDGRID_TEST_AUTH_TOKEN }}
          sendgrid_list_id: ${{ secrets.SENDGRID_TEST_LIST_ID }}
        run: |
          bundle exec rails db:prepare
          bundle exec rspec

      - name: Publish Code Coverage
        run: |
          export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
          ./cc-test-reporter after-build -r ${{secrets.CC_TEST_REPORTER_ID}}

      - name: Create Coverage Artifact
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage/

security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.45.0
        with:
          ruby-version: 2.7.1

      - name: Install Brakeman
        run: |
          gem install brakeman

      - name: Run Brakeman
        run: |
          brakeman -f json > tmp/brakeman.json || exit 0

      - name: Brakeman Report
        uses: devmasx/brakeman-linter-action@v1.0.0
        env:
          REPORT_PATH: tmp/brakeman.json
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
